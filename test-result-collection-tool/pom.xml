<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>collection-tool</artifactId>
        <groupId>com.hp.mqm</groupId>
        <version>12.50.22-SNAPSHOT</version>
    </parent>

    <artifactId>test-result-collection-tool</artifactId>

    <dependencies>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - version is redundant, the same one is already given in indi-integrations root pom -->
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - version is redundant, the same one is already given in indi-integrations root pom -->
            <version>2.4</version>
        </dependency>
        <dependency>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - consider moving this dependency to indi-integrations root pom, might be reusable -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - consider moving this dependency to indi-integrations root pom, might be reusable -->
            <!-- CODE REVIEW, Johnny, 16Oct2015 - make sure it does not break the custom http client we use for Jenkins plugin -->
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5</version>
        </dependency>
        <dependency>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - consider moving this dependency to indi-integrations root pom, might be reusable -->
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20150729</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - version is redundant, the same one is already given in indi-integrations root pom -->
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- CODE REVIEW, Johnny, 16Oct2015 - consider moving this dependency to indi-integrations root pom, might be reusable -->
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>1.12.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.dstovall</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <version>1.4.4</version>
                <executions>
                    <execution>
                        <configuration>
                            <mainClass>com.hp.mqm.clt.App</mainClass>
                        </configuration>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>onejar-maven-plugin.googlecode.com</id>
            <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
        </pluginRepository>
    </pluginRepositories>

</project>
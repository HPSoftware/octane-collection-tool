<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>collection-tool</artifactId>
        <groupId>com.hp.mqm</groupId>
        <version>12.53.16-SNAPSHOT</version>
    </parent>

	<artifactId>test-result-collection-tool</artifactId>

	<properties>
		<matching.obj>jarfile_batch_sign_local_timestamp</matching.obj>
		<file.name>${project.artifactId}.one-jar.jar</file.name>
        	<shade.file.name>${project.artifactId}.shade</shade.file.name>
        	<shade.file.name.with.jar>${project.artifactId}.shade.jar</shade.file.name.with.jar>
		<original.folder>${project.build.directory}/temp</original.folder>
		<cert.project.name>jarAgm</cert.project.name>
	</properties>

    <dependencies>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>1.12.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- Maven Shade Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${shade.file.name}</finalName>
                            <transformers>
                                <!-- add Main-Class to manifest file -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.hp.mqm.clt.App</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>org.dstovall</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <version>1.4.4</version>
                <executions>
                    <execution>
                        <configuration>
                            <mainClass>com.hp.mqm.clt.App</mainClass>
                            <filename>test-result-collection-tool.one-jar.jar</filename>
                        </configuration>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.5</version>
                <executions>
                    <execution>
                        <id>assembly</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/main/assemblies/test-result-collection-tool-assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
	<profiles>
		<profile>
			<id>jar-signing</id>
			<build>
				<defaultGoal>install</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
                            <!-- one-jar -->
							<execution>
								<id>default-cli</id>
								<phase>pre-integration-test</phase>
								<configuration>
									<target name="Sign">
										<echo message="This is the file name:${file.name}" />
										<exec executable="/bin/bash" failonerror="true">
											<arg value="/opt/HPCSS/HPSignClient/HPSign.sh"/>
											<!--<arg value="-r jarAgm -c HPSign.conf -i /tmp/tmp/hp-integration-bridge-upgrade-windows.jar -o /tmp/tmp/Signed -obj jarfile_batch_sign_local_timestamp" />-->
											<arg value="-r ${cert.project.name} -c HPSign.conf -i ${project.build.directory}/${file.name} -o ${original.folder} -obj ${matching.obj}" />							 
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>copy signed jar to target</id>
								<phase>pre-integration-test</phase>
								<configuration>
									<target>
										<copy file="${original.folder}/${file.name}" toFile="${project.build.directory}/${file.name}"
                                              overwrite="true">
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>verify-signing</id>
								<phase>post-integration-test</phase>
								<configuration>
									<target name="Verify sign">
										<echo message="This is the file name:${file.name}" />
										<exec executable="/bin/bash" failonerror="true">
											<arg value="-c"/>
											<arg value="if /usr/bin/jarsigner -verify ${project.build.directory}/${file.name} | grep 'jar verified.'; then echo THE JAR ${file.name} WAS SIGNED SUCCESSFULLY; exit 0; else echo THE BUILD FAILED BECAUSE JAR ${file.name} IS UNSIGNED; exit 1; fi"/>										
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
                            <!-- shade -->
                            <execution>
                                <id>default-shade-cli</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <target name="SignShade">
                                        <echo message="This is the shade file name: ${shade.file.name.with.jar}" />
                                        <exec executable="/bin/bash" failonerror="true">
                                            <arg value="/opt/HPCSS/HPSignClient/HPSign.sh"/>
                                            <!--<arg value="-r jarAgm -c HPSign.conf -i /tmp/tmp/hp-integration-bridge-upgrade-windows.jar -o /tmp/tmp/Signed -obj jarfile_batch_sign_local_timestamp" />-->
                                            <arg value="-r ${cert.project.name} -c HPSign.conf -i ${project.build.directory}/${shade.file.name.with.jar} -o ${original.folder} -obj ${matching.obj}" />
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>copy shade signed jar to target</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <target>
                                        <copy file="${original.folder}/${shade.file.name.with.jar}" toFile="${project.build.directory}/${shade.file.name.with.jar}"
                                              overwrite="true">
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify-shade-signing</id>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <target name="Verify shade sign">
                                        <echo message="This is the file name: ${shade.file.name.with.jar}" />
                                        <exec executable="/bin/bash" failonerror="true">
                                            <arg value="-c"/>
                                            <arg value="if /usr/bin/jarsigner -verify ${project.build.directory}/${shade.file.name.with.jar} | grep 'jar verified.'; then echo THE JAR ${shade.file.name.with.jar} WAS SIGNED SUCCESSFULLY; exit 0; else echo THE BUILD FAILED BECAUSE JAR ${shade.file.name.with.jar} IS UNSIGNED; exit 1; fi"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
						</executions>
					</plugin>
				</plugins>
			</build>						
		</profile>
	</profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>onejar-maven-plugin.googlecode.com</id>
            <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
        </pluginRepository>
    </pluginRepositories>

</project>